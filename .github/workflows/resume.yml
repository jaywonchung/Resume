# This is a basic workflow to help you get started with Actions

name: Compile Resume

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build Resume
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[Compile]')"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout Git repository
      uses: actions/checkout@v2.3.1
    - name: Install tools for building the Resume
      run: sudo apt-get install latexmk texlive-xetex
    - name: Replace secrets in sources
      env:
        PN: ${{ secrets.PHONE_NUMBER }}
        EA: ${{ secrets.EMAIL_ADDRESS }}
      run: |
        sed -i -e "s/PHONE_NUMBER/$PN/" -e "s/EMAIL_ADDRESS/$EA/" resume.tex cv.tex
    - name: Compile the Resume
      run: latexmk -xelatex resume.tex
    - name: Set environment variable NOW
      run: echo "::set-env name=NOW::v$(date +'%Y%m%d.%H%M%S')"
    - name: Create release
      id: create_release
      uses: actions/create-release@v1.1.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.NOW }}
        release_name: Release ${{ env.NOW }}
        draft: false
        prerelease: false
    - name: Upload Resume to release
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./resume.pdf
        asset_name: resume.pdf
        asset_content_type: application/pdf
    - name: Repository Dispatch
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.PAT }}
        repository: jaywonchung/jaywonchung.github.io
        event-type: resume-release
        client-payload: '{"version": "${{ env.NOW }}"}'
